#Generated by GPT4, remove from repo when all collisions have been generated

from PIL import Image

def image_to_array(image_path, tile_size=20):
    # Load the image
    img = Image.open(image_path)

    # Convert to grayscale
    img_gray = img.convert("L")

    # Get image dimensions
    width, height = img_gray.size

    # Calculate the number of tiles in both dimensions
    num_tiles_x = width // tile_size
    num_tiles_y = height // tile_size

    # Initialize the result array
    result_array = []

    # Iterate through tiles
    for y in range(num_tiles_y):
        row = []
        for x in range(num_tiles_x):
            # Extract the tile
            tile = img_gray.crop((x * tile_size, y * tile_size, (x + 1) * tile_size, (y + 1) * tile_size))

            # Check if any pixel in the tile is black
            is_black = any(p < 1 for p in tile.getdata())

            # Append 0 or 1 to the row
            row.append(0 if is_black else 1)

        # Append the row to the result array
        result_array.append(row)

    return result_array

# Example usage
image_path = "./backgrounds/room_ruins3.png"
result = image_to_array(image_path)

# Print the resulting array
for row in result:
    print(row)

